/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReceiptImport } from './routes/receipt'
import { Route as LoginImport } from './routes/login'
import { Route as UserImport } from './routes/_user'
import { Route as UserIndexImport } from './routes/_user/index'
import { Route as UserStudentsImport } from './routes/_user/students'
import { Route as UserFeesImport } from './routes/_user/fees'
import { Route as UserDiscountsImport } from './routes/_user/discounts'
import { Route as UserCashoutImport } from './routes/_user/cashout'
import { Route as UserBillsImport } from './routes/_user/bills'
import { Route as UserAccountImport } from './routes/_user/account'
import { Route as UserStudentsIdImport } from './routes/_user/students_.$id'
import { Route as UserBillsMakeImport } from './routes/_user/bills_.make'

// Create/Update Routes

const ReceiptRoute = ReceiptImport.update({
  path: '/receipt',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any)

const UserIndexRoute = UserIndexImport.update({
  path: '/',
  getParentRoute: () => UserRoute,
} as any)

const UserStudentsRoute = UserStudentsImport.update({
  path: '/students',
  getParentRoute: () => UserRoute,
} as any)

const UserFeesRoute = UserFeesImport.update({
  path: '/fees',
  getParentRoute: () => UserRoute,
} as any)

const UserDiscountsRoute = UserDiscountsImport.update({
  path: '/discounts',
  getParentRoute: () => UserRoute,
} as any)

const UserCashoutRoute = UserCashoutImport.update({
  path: '/cashout',
  getParentRoute: () => UserRoute,
} as any)

const UserBillsRoute = UserBillsImport.update({
  path: '/bills',
  getParentRoute: () => UserRoute,
} as any)

const UserAccountRoute = UserAccountImport.update({
  path: '/account',
  getParentRoute: () => UserRoute,
} as any)

const UserStudentsIdRoute = UserStudentsIdImport.update({
  path: '/students/$id',
  getParentRoute: () => UserRoute,
} as any)

const UserBillsMakeRoute = UserBillsMakeImport.update({
  path: '/bills/make',
  getParentRoute: () => UserRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/receipt': {
      id: '/receipt'
      path: '/receipt'
      fullPath: '/receipt'
      preLoaderRoute: typeof ReceiptImport
      parentRoute: typeof rootRoute
    }
    '/_user/account': {
      id: '/_user/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof UserAccountImport
      parentRoute: typeof UserImport
    }
    '/_user/bills': {
      id: '/_user/bills'
      path: '/bills'
      fullPath: '/bills'
      preLoaderRoute: typeof UserBillsImport
      parentRoute: typeof UserImport
    }
    '/_user/cashout': {
      id: '/_user/cashout'
      path: '/cashout'
      fullPath: '/cashout'
      preLoaderRoute: typeof UserCashoutImport
      parentRoute: typeof UserImport
    }
    '/_user/discounts': {
      id: '/_user/discounts'
      path: '/discounts'
      fullPath: '/discounts'
      preLoaderRoute: typeof UserDiscountsImport
      parentRoute: typeof UserImport
    }
    '/_user/fees': {
      id: '/_user/fees'
      path: '/fees'
      fullPath: '/fees'
      preLoaderRoute: typeof UserFeesImport
      parentRoute: typeof UserImport
    }
    '/_user/students': {
      id: '/_user/students'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof UserStudentsImport
      parentRoute: typeof UserImport
    }
    '/_user/': {
      id: '/_user/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof UserIndexImport
      parentRoute: typeof UserImport
    }
    '/_user/bills/make': {
      id: '/_user/bills/make'
      path: '/bills/make'
      fullPath: '/bills/make'
      preLoaderRoute: typeof UserBillsMakeImport
      parentRoute: typeof UserImport
    }
    '/_user/students/$id': {
      id: '/_user/students/$id'
      path: '/students/$id'
      fullPath: '/students/$id'
      preLoaderRoute: typeof UserStudentsIdImport
      parentRoute: typeof UserImport
    }
  }
}

// Create and export the route tree

interface UserRouteChildren {
  UserAccountRoute: typeof UserAccountRoute
  UserBillsRoute: typeof UserBillsRoute
  UserCashoutRoute: typeof UserCashoutRoute
  UserDiscountsRoute: typeof UserDiscountsRoute
  UserFeesRoute: typeof UserFeesRoute
  UserStudentsRoute: typeof UserStudentsRoute
  UserIndexRoute: typeof UserIndexRoute
  UserBillsMakeRoute: typeof UserBillsMakeRoute
  UserStudentsIdRoute: typeof UserStudentsIdRoute
}

const UserRouteChildren: UserRouteChildren = {
  UserAccountRoute: UserAccountRoute,
  UserBillsRoute: UserBillsRoute,
  UserCashoutRoute: UserCashoutRoute,
  UserDiscountsRoute: UserDiscountsRoute,
  UserFeesRoute: UserFeesRoute,
  UserStudentsRoute: UserStudentsRoute,
  UserIndexRoute: UserIndexRoute,
  UserBillsMakeRoute: UserBillsMakeRoute,
  UserStudentsIdRoute: UserStudentsIdRoute,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof UserRouteWithChildren
  '/login': typeof LoginRoute
  '/receipt': typeof ReceiptRoute
  '/account': typeof UserAccountRoute
  '/bills': typeof UserBillsRoute
  '/cashout': typeof UserCashoutRoute
  '/discounts': typeof UserDiscountsRoute
  '/fees': typeof UserFeesRoute
  '/students': typeof UserStudentsRoute
  '/': typeof UserIndexRoute
  '/bills/make': typeof UserBillsMakeRoute
  '/students/$id': typeof UserStudentsIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/receipt': typeof ReceiptRoute
  '/account': typeof UserAccountRoute
  '/bills': typeof UserBillsRoute
  '/cashout': typeof UserCashoutRoute
  '/discounts': typeof UserDiscountsRoute
  '/fees': typeof UserFeesRoute
  '/students': typeof UserStudentsRoute
  '/': typeof UserIndexRoute
  '/bills/make': typeof UserBillsMakeRoute
  '/students/$id': typeof UserStudentsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_user': typeof UserRouteWithChildren
  '/login': typeof LoginRoute
  '/receipt': typeof ReceiptRoute
  '/_user/account': typeof UserAccountRoute
  '/_user/bills': typeof UserBillsRoute
  '/_user/cashout': typeof UserCashoutRoute
  '/_user/discounts': typeof UserDiscountsRoute
  '/_user/fees': typeof UserFeesRoute
  '/_user/students': typeof UserStudentsRoute
  '/_user/': typeof UserIndexRoute
  '/_user/bills/make': typeof UserBillsMakeRoute
  '/_user/students/$id': typeof UserStudentsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/receipt'
    | '/account'
    | '/bills'
    | '/cashout'
    | '/discounts'
    | '/fees'
    | '/students'
    | '/'
    | '/bills/make'
    | '/students/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/receipt'
    | '/account'
    | '/bills'
    | '/cashout'
    | '/discounts'
    | '/fees'
    | '/students'
    | '/'
    | '/bills/make'
    | '/students/$id'
  id:
    | '__root__'
    | '/_user'
    | '/login'
    | '/receipt'
    | '/_user/account'
    | '/_user/bills'
    | '/_user/cashout'
    | '/_user/discounts'
    | '/_user/fees'
    | '/_user/students'
    | '/_user/'
    | '/_user/bills/make'
    | '/_user/students/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  UserRoute: typeof UserRouteWithChildren
  LoginRoute: typeof LoginRoute
  ReceiptRoute: typeof ReceiptRoute
}

const rootRouteChildren: RootRouteChildren = {
  UserRoute: UserRouteWithChildren,
  LoginRoute: LoginRoute,
  ReceiptRoute: ReceiptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_user",
        "/login",
        "/receipt"
      ]
    },
    "/_user": {
      "filePath": "_user.tsx",
      "children": [
        "/_user/account",
        "/_user/bills",
        "/_user/cashout",
        "/_user/discounts",
        "/_user/fees",
        "/_user/students",
        "/_user/",
        "/_user/bills/make",
        "/_user/students/$id"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/receipt": {
      "filePath": "receipt.tsx"
    },
    "/_user/account": {
      "filePath": "_user/account.tsx",
      "parent": "/_user"
    },
    "/_user/bills": {
      "filePath": "_user/bills.tsx",
      "parent": "/_user"
    },
    "/_user/cashout": {
      "filePath": "_user/cashout.tsx",
      "parent": "/_user"
    },
    "/_user/discounts": {
      "filePath": "_user/discounts.tsx",
      "parent": "/_user"
    },
    "/_user/fees": {
      "filePath": "_user/fees.tsx",
      "parent": "/_user"
    },
    "/_user/students": {
      "filePath": "_user/students.tsx",
      "parent": "/_user"
    },
    "/_user/": {
      "filePath": "_user/index.tsx",
      "parent": "/_user"
    },
    "/_user/bills/make": {
      "filePath": "_user/bills_.make.tsx",
      "parent": "/_user"
    },
    "/_user/students/$id": {
      "filePath": "_user/students_.$id.tsx",
      "parent": "/_user"
    }
  }
}
ROUTE_MANIFEST_END */
